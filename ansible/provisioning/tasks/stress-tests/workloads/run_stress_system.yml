- name: Run stress-system
  block:

    - name: Check containers status
      delegate_to: localhost
      shell: "sudo {{ singularity_command_alias }} instance list -j"
      register: apptainer_list_output
      args:
        executable: /bin/bash

    - name: Start SmartWatts
      delegate_to: localhost
      shell: "sudo {{ singularity_command_alias }} instance start -C --bind {{ smartwatts_output }}:/sensor-output image/{{ image_file }} {{ container_name }}"
      when: "'\"instance\": \"{{ container_name }}\",' not in apptainer_list_output.stdout"
      args:
        chdir: "{{ smartwatts_path }}"
        executable: /bin/bash

    - name: Give SmartWatts a couple of seconds to be ready
      delegate_to: localhost
      pause:
        seconds: 15

    - name: Set stress-system options
      set_fact:
        stress_system_options: "-l {{ load }} -s {{ stressors }} --cpu-load-types {{ load_types }} -c {{ current_cores }} -t {{ experiment_duration }}"

    - name: Add especial options to stress-system for running iomix stressor
      set_fact:
        stress_system_options: "--other {{ other_options }} -l {{ load }} -s {{ stressors }} --cpu-load-types {{ load_types }} -c {{ current_cores }} -t 2m"
      when: "'iomix' in stressors.split(',')"

    - name: Write start timestamp
      delegate_to: localhost
      lineinfile:
        path: "{{ timestamps_dir_path }}/{{ timestamps_file }}"
        line: "{{ dist_name }} STRESS-TEST (CORES = {{ current_cores }}) START: {{ now(utc=true,fmt='+%d/%m/%Y %H:%M:%S') }}"
        create: yes

    - name: Run stress-system
      shell: "sudo {{ singularity_command_alias }} instance start -C --bind {{ stress_disk_bind }}:/{{ stress_disk_bind }} {{ stress_system_path }}/container/stress.sif stress {{ stress_system_options }}"
      args:
          executable: /bin/bash

    - name: Wait for the stress test to finish
      delegate_to: localhost
      pause:
        seconds: "{{ experiment_duration }}"

    - name: Write stop timestamp
      delegate_to: localhost
      lineinfile:
        path: "{{ timestamps_dir_path }}/{{ timestamps_file }}"
        line: "{{ dist_name }} STRESS-TEST (CORES = {{ current_cores }}) STOP: {{ now(utc=true,fmt='+%d/%m/%Y %H:%M:%S') }}"
        create: yes

    - name: Stop stress-system
      shell: "sudo {{ singularity_command_alias }} instance stop stress"
      args:
        executable: /bin/bash

    - name: Write start idle timestamp
      delegate_to: localhost
      lineinfile:
        path: "{{ timestamps_dir_path }}/{{ timestamps_file }}"
        line: "{{ dist_name }} IDLE START: {{ now(utc=true,fmt='+%d/%m/%Y %H:%M:%S') }}"
        create: yes

    - name: Wait 30s for the system to stabilize
      delegate_to: localhost
      pause:
        seconds: 30

    - name: Write stop idle timestamp
      delegate_to: localhost
      lineinfile:
        path: "{{ timestamps_dir_path }}/{{ timestamps_file }}"
        line: "{{ dist_name }} IDLE START: {{ now(utc=true,fmt='+%d/%m/%Y %H:%M:%S') }}"
        create: yes

    - name: Stop SmartWatts
      delegate_to: localhost
      shell: "sudo {{ singularity_command_alias }} instance stop smartwatts"
      args:
        executable: /bin/bash

  vars:
    - current_cores: "{{ distribution[0:last_position | int] }}"
    - smartwatts_output: "{{ smartwatts_path }}/output"
    - definition_file: "smartwatts.def"
    - image_file: "smartwatts.sif"
    - container_name: "smartwatts"